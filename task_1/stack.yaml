AWSTemplateFormatVersion: '2010-09-09'
Description: CloudFormation template to create an S3 bucket and a Lambda function that modifies index.html

Parameters:
  BucketName:
    Type: String

Resources:
  TestBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Ref BucketName
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true
      VersioningConfiguration: 
        Status: Enabled
      WebsiteConfiguration: 
        IndexDocument: index.html

  TestBucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref TestBucket
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Action:
              - 's3:GetObject'
            Effect: Allow
            Resource: !Join
              - ''
              - - 'arn:aws:s3:::'
                - !Ref TestBucket
                - /*
            Principal: '*'


  LambdaExecutionRole:
    Type: AWS::IAM::Role
    Properties: 
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal: 
              Service: lambda.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: LambdaS3Policy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - s3:GetObject
                Resource: 
                  - !Sub 'arn:aws:s3:::${TestBucket}/*'

  TestLambdaFunction:
    Type: AWS::Lambda::Function
    Properties:
      FunctionName: !Sub 'UpdateS3BucketFunction-${AWS::StackName}-${AWS::Region}'
      Handler: index.handler
      Role: !GetAtt LambdaExecutionRole.Arn
      Runtime: python3.12
      Timeout: 5
      Code:
        ZipFile: |
          import json
          import boto3

          s3 = boto3.client('s3')

          def handler(event, context):
              bucket_name = '293864207'
              object_key = 'index.html'
              new_content = "<html><body><h1>Modified by Lambda!</h1></body></html>"
              
              s3.put_object(Bucket=bucket_name, Key=object_key, Body=new_content, ContentType='text/html')
              
              return {
                  'statusCode': 200,
                  'body': json.dumps('index.html updated successfully!')
              }

  S3PutObjectPermission:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName: !GetAtt TestLambdaFunction.Arn
      Principal: s3.amazonaws.com
      SourceArn: !GetAtt TestBucket.Arn

Outputs:
  BucketName:
    Description: The name of the S3 bucket
    Value: !Ref TestBucket

  LambdaFunctionName:
    Description: The name of the Lambda function
    Value: !Ref TestLambdaFunction
